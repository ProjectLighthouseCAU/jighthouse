/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.8/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

configurations {
    extraLibs
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.1'
    testImplementation 'org.slf4j:slf4j-nop:1.7.32'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:31.1-jre'
    implementation 'org.msgpack:msgpack-core:0.9.0'
    implementation 'org.java-websocket:Java-WebSocket:1.5.2'
    implementation 'org.slf4j:slf4j-nop:1.7.32'
}


// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
    //withSourcesJar()
    //withJavadocJar()
}


tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

tasks.named('jar') {    
    archiveBaseName.set('jighthouse')
    manifest {
        attributes "Main-Class": "jighthouse.Jighthouse"
        attributes('Implementation-Title': project.name,
                   'Implementation-Version': project.version)
    }
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

version = '0.1.5'